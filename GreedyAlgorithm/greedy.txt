Первая задача:

Есть слитки с весами [10, 5, 7, 3, 1] и стоимостями [15, 10, 7, 4, 
1], а рюкзак вмещает максимум 10. Жадный алгоритм может начать с 
самого дорогого слитка (15), но затем не сможет вместить остальные 
слитки, что может привести к неоптимальному результату.


• A (стоимость 15, вес 10)
• B (стоимость 10, вес 5)
• C (стоимость 7, вес 7)
• D (стоимость 4, вес 3)
• E (стоимость 1, вес 1)

1. Сортировка: A, B, C, D, E (по убыванию стоимости/веса).
2. Инициализация: Рюкзак пуст, текущая вместимость 23.
3. Выбор и добавление: A не помещается (вес 10 > текущейвместимости 
23), пропускаем. B помещается (вес 5 <= 23), добавляемв рюкзак. 
Текущая вместимость: 18, общая стоимость: 10.
4. Повторение: C (вес 7 <= 18), добавляем в рюкзак. 
Текущаявместимость: 11, общая стоимость: 17.
5. Повторение: D (вес 3 <= 11), добавляем в рюкзак. 
Текущаявместимость: 8, общая стоимость: 21.
6. Повторение: E (вес 1 <= 8), добавляем в рюкзак. 
Текущаявместимость: 7, общая стоимость: 22.

Оптимальное решение задачи - это выбор предметов B, C, D и E, с 
общей стоимостью 22.



Вторая задача:

1. Сортируем активности: [{11-14, 2}, {12-16, 1}, {10-13, 3}, {9-11, 4}].
2. Создаем расписание: [0, 0, 0, 0, 0, 0, 0, 0].
3. Добавляем активности в порядке убывания выгодности:
• Выбираем {11-14, 2} и добавляем в расписание с 11 до 14.
• Выбираем {12-16, 1} и добавляем в расписание с 12 до 13 
(после13:00).
• Выбираем {10-13, 3} и пропускаем, так как все доступные часы 
до13:00 заняты.
• Выбираем {9-11, 4} и добавляем в расписание с 9 до 11.
4. Общая выгода: 2 (активность 1) + 1 (активность 2) + 4(активность 4) = 7.

Максимальная выгода от активностей при ограниченном времени в зале 
составляет 7 единиц.
